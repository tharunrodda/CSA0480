19.#include <stdio.h>
#include <pthread.h>

// Shared counter
int counter = 0;

// Mutex lock
pthread_mutex_t mutex;

// Function prototypes
void *incrementCounter(void *arg);

int main() {
    // Initialize mutex
    pthread_mutex_init(&mutex, NULL);

    // Create threads
    pthread_t thread1, thread2;

    pthread_create(&thread1, NULL, incrementCounter, NULL);
    pthread_create(&thread2, NULL, incrementCounter, NULL);

    // Join threads
    pthread_join(thread1, NULL);
    pthread_join(thread2, NULL);

    // Destroy mutex
    pthread_mutex_destroy(&mutex);

    // Print the final value of the counter
    printf("Final counter value: %d\n", counter);

    return 0;
}

void *incrementCounter(void *arg) {
    for (int i = 0; i < 100000; ++i) {
        // Acquire the mutex lock
        pthread_mutex_lock(&mutex);

        // Critical section: Increment the shared counter
        counter++;

        // Release the mutex lock
        pthread_mutex_unlock(&mutex);
    }

    pthread_exit(NULL);
}
